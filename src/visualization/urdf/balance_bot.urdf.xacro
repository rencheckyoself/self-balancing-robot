<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="balance_bot">


  <!-- Load in parameters from the YAML file -->
  <xacro:property name="props" value="${load_yaml('$(find dynamics)/config/robot_params.yaml')}"/>

  <xacro:property name="wheel_radius" value="${props['wheel_radius']}"/>
  <xacro:property name="wheel_base" value="${props['body_wheel_base']}"/>

  <xacro:property name="body_width" value="${props['body_width']}"/>
  <xacro:property name="body_height" value="${props['body_height']}"/>
  <xacro:property name="body_thickness" value="${props['body_thickness']}"/>
  <xacro:property name="body_com_height" value="${props['body_com_height']}"/>

  <xacro:property name="motor_height" value="0.0115"/> <!-- distance between wheel rotation axis and bottom plate-->
  <xacro:property name="mid_tier" value="0.0191"/> <!-- distance between mid plate and bottom plate-->
  <xacro:property name="top_tier" value="0.0254"/> <!-- distance between mid plate and top plate-->
  <xacro:property name="motor_shaft" value="0.00907"/> <!-- length of the motor_shaft -->

  <material name="smokey">
    <color rgba=".1 .1 .1 1"/>
  </material>

  <material name="wheel">
    <color rgba=".5 .5 .5 .5"/>
  </material>

  <material name="invisible">
    <color rgba="0 0 0 0"/>
  </material>

  <!-- Macro to load a part with a mesh -->
  <xacro:macro name="body_link_mesh" params="name lxyz lrpy mat meshfile meshscale jxyz jrpy">
    <link name="${name}">
      <visual>
        <origin rpy="${lrpy}" xyz="${lxyz}" />
        <geometry>
          <mesh filename="${meshfile}" scale="${meshscale}"/>
        </geometry>
        <material name="${mat}"/>
      </visual>
    </link>

    <joint name= "${name}_joint" type="fixed">
      <origin xyz="${jxyz}" rpy="${jrpy}" />
      <parent link="moving_link"/>
      <child link="${name}" />
    </joint>
  </xacro:macro>

  <xacro:macro name="wheel_link_mesh" params="name lxyz lrpy mat meshfile meshscale jxyz jrpy">
    <link name="${name}">
      <visual>
        <origin rpy="${lrpy}" xyz="${lxyz}" />
        <geometry>
          <mesh filename="${meshfile}" scale="${meshscale}"/>
        </geometry>
        <material name="${mat}"/>
      </visual>
    </link>

    <joint name= "${name}_axle" type="continuous">
      <origin xyz="${jxyz}" rpy="${jrpy}" />
      <parent link="base_link"/>
      <child link="${name}" />
      <axis xyz = "0 -1 0"/>
    </joint>
  </xacro:macro>

  <!-- The base link of the robot center between the two wheels directly below the COM of the body -->
  <link name="base_link" >
    <visual>
      <geometry>
        <sphere radius=".0025" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1" />
      </material>
      <origin rpy="0 0 0" xyz="0 0 ${wheel_radius}"/>
    </visual>
  </link>

  <link name="moving_link">
    <visual>
      <geometry>
        <sphere radius=".0025" />
      </geometry>
      <material name="black"/>
      <origin xyz="0 0 ${body_com_height}" rpy="0 0 0"/>
    </visual>
  </link>

  <joint name="body_joint" type="continuous">
    <origin xyz="0 0 ${wheel_radius}" rpy="0 ${-pi/2} ${pi}" />
    <parent link="base_link"/>
    <child link="moving_link" />
    <axis xyz="0 1 0"/>
  </joint>

  <xacro:body_link_mesh name="body_mesh" mat="smokey"
    lxyz="${-body_thickness/2} ${-body_width/2 - motor_shaft} ${-motor_height/2}" lrpy="0 0 0"
    meshfile="package://visualization/meshes/SelfBalancingBotBody.STL"
    meshscale="1 1 1"
    jxyz="0 0 0" jrpy="0 0 0"/>

  <xacro:wheel_link_mesh name="left_wheel" mat="wheel"
    lxyz="${wheel_radius} ${body_width/2} ${-wheel_radius}" lrpy="0 0 ${pi/2}"
    meshfile="package://visualization/meshes/Wheel.STL"
    meshscale="1 1 1"
    jxyz="0 0 ${wheel_radius}" jrpy="0 0 0"/>

  <xacro:wheel_link_mesh name="right_wheel" mat="wheel"
    lxyz="${-wheel_radius} ${-(body_width/2)} ${-wheel_radius}" lrpy="0 0 ${-pi/2}"
    meshfile="package://visualization/meshes/Wheel.STL"
    meshscale="1 1 1"
    jxyz="0 0 ${wheel_radius}" jrpy="0 0 0"/>

</robot>
